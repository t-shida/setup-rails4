name: learn-github-actions
on:
  push:
   branches:
     - master
jobs:
  build:
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Libs
        run: |
          # remove MySQL5.7
          mysql --version
          sudo apt-get remove --purge mysql-server mysql-client mysql-common && sudo apt-get autoremove && sudo apt-get autoclean && sudo deluser mysql && sudo rm -rf /var/lib/mysql && sudo apt-get purge mysql-server-core-5.7 && sudo apt-get purge mysql-client-core-5.7 && sudo rm -rf /var/log/mysql && sudo rm -rf /etc/mysql
          # sudo apt-get purge mysql-server*
          sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu trusty universe'
          sudo apt-get update


          # Install apt
          sudo apt-get install autoconf bison build-essential gcc-6 g++-6 libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev mysql-server-5.6 mysql-client-5.6
          # sudo apt-get install autoconf bison build-essential gcc-6 g++-6 libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm5 libgdbm-dev mysql-server mysql-client libmysqlclient-dev
          # mysql --version        

          # Install libmysqlclient5.6
          mkdir -p ~/.src/libmysqlclient
          cd ~/.src/libmysqlclient
          wget http://launchpadlibrarian.net/212189159/libmysqlclient18_5.6.25-0ubuntu1_amd64.deb
          wget http://launchpadlibrarian.net/212189147/libmysqlclient-dev_5.6.25-0ubuntu1_amd64.deb
          cd ~/.src/libmysqlclient
          sudo dpkg -i libmysqlclient18_5.6.25-0ubuntu1_amd64.deb
          sudo dpkg -i libmysqlclient-dev_5.6.25-0ubuntu1_amd64.deb
          
      - name: Cache OpenSSL1.0
        uses: actions/cache@v1
        id: cache_openssl
        with:
          path: /opt/openssl
          key: openssl1.0
          
      - name: Install OpenSSL1.0
        if: steps.cache_openssl.outputs.cache-hit != 'true'          
        run: |
          mkdir -p ~/.src/openssl
          cd ~/.src/openssl          
          curl https://www.openssl.org/source/openssl-1.0.2l.tar.gz | tar xz && cd openssl-1.0.2l && sudo ./config --prefix=/opt/openssl shared && sudo make && sudo make install 
          sudo wget -O /opt/openssl/ssl/cert.pem http://curl.haxx.se/ca/cacert.pem
          /opt/openssl/bin/openssl version
          
      - name: Cache Rbenv
        uses: actions/cache@v1
        id: cache_rbenv
        with:
          path: /home/runner/.rbenv
          key: ${{ runner.os }}-rbenv-${{ hashFiles('**/.ruby-version') }}
          
      - name: Install Rbenv
        if: steps.cache_rbenv.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
          git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
          echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
          source ~/.bash_profile
          RUBY_CONFIGURE_OPTS="--with-openssl-dir=/opt/openssl" rbenv install 2.1.2        
          # ruby -ropenssl -e'puts OpenSSL::OPENSSL_VERSION'
          # ruby -ropenssl -e "p OpenSSL::X509::DEFAULT_CERT_FILE"
          
      - name: Setup Ruby version
        if: steps.cache_rbenv.outputs.cache-hit == 'true'
        run: |
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
          echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
          source ~/.bash_profile
          rbenv global 2.1.2
          rbenv rehash
          ruby -v     
             
      - name: Cache Gems
        uses: actions/cache@v2
        id: cached-gems      
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}

      - name: Install Gems
        run: |
          source ~/.bash_profile
          rbenv exec gem install bundler -v 1.6.5
          RAILS_ENV=test bundle install --path vendor/bundle --jobs=4


